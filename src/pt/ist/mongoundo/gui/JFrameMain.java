/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pt.ist.mongoundo.gui;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;
import java.awt.Component;
import java.awt.Font;
import java.util.List;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.bson.Document;

import pt.ist.mongoundo.MongoUndo;

/**
 *
 * @author davidmatos
 */
public class JFrameMain extends javax.swing.JFrame {

    /**
     * Creates new form JFrameMain
     */
    public JFrameMain() {
        initComponents();
        hideScreen();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPaneMain = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        tabMain = new javax.swing.JTabbedPane();
        pnlDocuments = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        pnlInfo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDocuments = new javax.swing.JList<>();
        pnlLog = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLog = new javax.swing.JTable();
        pnlRecoverActions = new javax.swing.JPanel();
        btnRecoverSelective = new javax.swing.JButton();
        btnRecoverUndo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblTs = new javax.swing.JLabel();
        lblOp = new javax.swing.JLabel();
        lblNs = new javax.swing.JLabel();
        lblO = new javax.swing.JLabel();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemMongoConnections = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemQuit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("MongoUndo");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        jSplitPaneMain.setLeftComponent(jScrollPane1);

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        javax.swing.GroupLayout pnlInfoLayout = new javax.swing.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 334, Short.MAX_VALUE)
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane2.setTopComponent(pnlInfo);

        lstDocuments.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstDocuments);

        jSplitPane2.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout pnlDocumentsLayout = new javax.swing.GroupLayout(pnlDocuments);
        pnlDocuments.setLayout(pnlDocumentsLayout);
        pnlDocumentsLayout.setHorizontalGroup(
            pnlDocumentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlDocumentsLayout.setVerticalGroup(
            pnlDocumentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDocumentsLayout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabMain.addTab("Documents", pnlDocuments);

        tblLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblLog);

        jSplitPane3.setLeftComponent(jScrollPane3);

        btnRecoverSelective.setText("Selective Recovery");
        btnRecoverSelective.setToolTipText("");

        btnRecoverUndo.setText("Undo Recovery");

        jLabel1.setText("Timestamp");

        jLabel2.setText("op");

        jLabel3.setText("ns");

        jLabel4.setText("o");

        javax.swing.GroupLayout pnlRecoverActionsLayout = new javax.swing.GroupLayout(pnlRecoverActions);
        pnlRecoverActions.setLayout(pnlRecoverActionsLayout);
        pnlRecoverActionsLayout.setHorizontalGroup(
            pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRecoverActionsLayout.createSequentialGroup()
                .addComponent(btnRecoverUndo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRecoverSelective))
            .addGroup(pnlRecoverActionsLayout.createSequentialGroup()
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(47, 47, 47)
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblOp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRecoverActionsLayout.setVerticalGroup(
            pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRecoverActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblOp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblNs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblO))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(pnlRecoverActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRecoverSelective)
                    .addComponent(btnRecoverUndo)))
        );

        jSplitPane3.setRightComponent(pnlRecoverActions);

        javax.swing.GroupLayout pnlLogLayout = new javax.swing.GroupLayout(pnlLog);
        pnlLog.setLayout(pnlLogLayout);
        pnlLogLayout.setHorizontalGroup(
            pnlLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );
        pnlLogLayout.setVerticalGroup(
            pnlLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );

        tabMain.addTab("Log", pnlLog);

        jSplitPaneMain.setRightComponent(tabMain);

        jMenu1.setText("MongoUndo");

        jMenuItemMongoConnections.setText("MongoDB Connections");
        jMenuItemMongoConnections.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMongoConnectionsActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemMongoConnections);
        jMenu1.add(jSeparator1);

        jMenuItemQuit.setText("Quit");
        jMenuItemQuit.setToolTipText("");
        jMenuItemQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemQuit);

        jMenuBarMain.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItemAbout.setText("About MongoUndo");
        jMenuItemAbout.setToolTipText("");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemAbout);

        jMenuBarMain.add(jMenu2);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPaneMain, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemQuitActionPerformed

    private void jMenuItemMongoConnectionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMongoConnectionsActionPerformed
        JDialogConnections jDialogConnections = new JDialogConnections(this, true);
        jDialogConnections.setVisible(true);
        
    }//GEN-LAST:event_jMenuItemMongoConnectionsActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        JDialogAbout jDialogAbout = new JDialogAbout(this, true);
        jDialogAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        populateDocuments(node.getParent().toString(), node.toString());
        populateLog(node.getParent().toString(), node.toString());
        
    }//GEN-LAST:event_treeValueChanged

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRecoverSelective;
    private javax.swing.JButton btnRecoverUndo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemMongoConnections;
    private javax.swing.JMenuItem jMenuItemQuit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPaneMain;
    private javax.swing.JLabel lblNs;
    private javax.swing.JLabel lblO;
    private javax.swing.JLabel lblOp;
    private javax.swing.JLabel lblTs;
    private javax.swing.JList<String> lstDocuments;
    private javax.swing.JPanel pnlDocuments;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JPanel pnlLog;
    private javax.swing.JPanel pnlRecoverActions;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTable tblLog;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables

    private void hideScreen(){
        this.tree.removeAll();
        this.lstDocuments.removeAll();
                
                
    }
    
    
    
    
	public void populateTree() {
		DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
		((DefaultMutableTreeNode) model.getRoot()).removeAllChildren();

		DefaultMutableTreeNode top = new DefaultMutableTreeNode("MongoDatabases");

		List<String> databaseNames = MongoUndo.mongoClient.getDatabaseNames();
		for (String databaseName : databaseNames) {

			DefaultMutableTreeNode databaseNode = new DefaultMutableTreeNode(databaseName);
			top.add(databaseNode);
			MongoDatabase database = MongoUndo.mongoClient.getDatabase(databaseName);
			MongoIterable<String> collections = database.listCollectionNames();

			for (String collection : collections) {

				DefaultMutableTreeNode tableNode = new DefaultMutableTreeNode(collection);
				databaseNode.add(tableNode);

			}

		}

		((DefaultMutableTreeNode) model.getRoot()).add(top);
		model.reload();
	}

	private void populateDocuments(String databaseName, String collectionName) {
		lstDocuments.removeAll();
		DefaultListModel listModel = new DefaultListModel<String>();

		MongoDatabase database = MongoUndo.mongoClient.getDatabase(databaseName);
		FindIterable<Document> documents = database.getCollection(collectionName).find();
		for (Document document : documents) {
			DefaultMutableTreeNode documentNode = new DefaultMutableTreeNode(document.toString());
			listModel.addElement(documentNode.toString());
		}
		lstDocuments.setModel(listModel);
	}

	private void populateLog(String database, String collection) {
		
		
		
		DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
		renderer.setFont(renderer.getFont().deriveFont(Font.BOLD));

		String[] columns = new String[] { "undo", "ts", "op", "ns", "o" };

		ArrayList<Object[]> dataList = new ArrayList<Object[]>();

		tblLog.removeAll();

		FindIterable<Document> it = MongoUndo.mongoClient.getDatabase("local").getCollection("oplog.$main")
				.find(new Document("ns", database + "." + collection));

		for (Document logEntry : it) {
			Object[] line = new Object[5];
			line[0] = false;
			line[1] = logEntry.get(columns[1]).toString();
			line[2] = logEntry.get(columns[2]).toString();
			line[3] = logEntry.get(columns[3]).toString();
			line[4] = logEntry.get(columns[4]).toString();

			dataList.add(line);

		}

		Object[][] data = new Object[dataList.size()][5];
		for (int i = 0; i < dataList.size(); i++) {
			JCheckBox undoCheckBox = new JCheckBox();

			data[i] = dataList.get(i);
		}
		DefaultTableModel tableModel = new DefaultTableModel(data, columns){
                    @Override
                    public Class<?> getColumnClass(int columnIndex) {
                        if(columnIndex == 0){
                            return Boolean.class;
                        }
                        return String.class;
                    }

                    @Override
                    public boolean isCellEditable(int row, int column) {
                        return true;
                    }
                    
                    
                    
                };

		tblLog.setModel(tableModel);
		resizeColumnWidth(tblLog);
		
		DefaultListSelectionModel defaultListSelectionModel = new DefaultListSelectionModel();
		defaultListSelectionModel.addListSelectionListener(new ListSelectionListener() {
			
			@Override
			public void valueChanged(ListSelectionEvent e) {
//				if (e.getFirstIndex() != e.getLastIndex()){
//					lblTs.setText("");
//					lblNs.setText("");
//					lblOp.setText("");
//					lblO.setText("");
//				}else{
					lblTs.setText(data[e.getLastIndex()][1].toString());
					lblNs.setText(data[e.getLastIndex()][2].toString());
					lblOp.setText(data[e.getLastIndex()][3].toString());
					lblO.setText(data[e.getLastIndex()][4].toString());
					
					
					
					
					
//				}
				
				
			}
		});
		tblLog.setSelectionModel(defaultListSelectionModel);
	}

	public void resizeColumnWidth(JTable table) {
	    final TableColumnModel columnModel = table.getColumnModel();
	    for (int column = 0; column < table.getColumnCount(); column++) {
	        int width = 50; // Min width
	        for (int row = 0; row < table.getRowCount(); row++) {
	            TableCellRenderer renderer = table.getCellRenderer(row, column);
	            Component comp = table.prepareRenderer(renderer, row, column);
	            width = Math.max(comp.getPreferredSize().width +1 , width);
	        }
	        columnModel.getColumn(column).setPreferredWidth(width);
	    }
	}
        
       
}
